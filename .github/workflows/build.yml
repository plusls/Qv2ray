name: Build for Desktop

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  release:
    types: [prereleased]

defaults:
  run:
    shell: bash

jobs:
  build:
    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.config.vcpkgTriplet }}

    name: '${{ matrix.config.name }}'
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows MSVC", artifact: "Windows",
            os: windows-latest,
            has_release: true,
            vcpkgTriplet: x64-windows,
          }
        - {
            name: "Ubuntu", artifact: "Linux",
            os: ubuntu-latest,
            has_release: false,
            vcpkgTriplet: x64-linux,
          }
        - {
            name: "macOS", artifact: "macOS",
            os: macos-latest,
            has_release: true,
            vcpkgTriplet: x64-osx,
          }
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - uses: lukka/get-cmake@latest

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.14.0
      with:
        version: 6.2.2
        py7zrversion: ' '
        aqtversion: ' '
        setup-python: false

    - name: run-vcpkg
      uses: lukka/run-vcpkg@v10.6
      with:
        vcpkgJsonGlob: 'vcpkg.json'

    - name: Run CMake+vcpkg+Ninja+CTest to generate/build/test.
      uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ninja-multi-vcpkg'
        buildPreset: 'ninja-multi-vcpkg-release'

    - name: Generate 7zip
      run: 7z a Qv2ray.7z -- ./Qv2ray

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Qv2ray-${{ github.sha }}-${{ matrix.config.artifact }}.7z
        path: Qv2ray.7z

    - name: Get the version
      if: github.event_name == 'release' && matrix.config.has_release
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Upload to GitHub Release
      uses: svenstaro/upload-release-action@v2
      if: github.event_name == 'release' && matrix.config.has_release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: Qv2ray.7z
        asset_name: Qv2ray-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.artifact }}.7z
        tag: ${{ github.ref }}
        overwrite: true